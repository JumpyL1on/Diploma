@page "/account/login"
@using Frontend.Application.Features.Login
@attribute [AllowAnonymous]
<EditForm Model="@LoginCommand" OnValidSubmit="OnValidSubmitAsync">
    <MudCard Class="ma-auto" Style="width: 30%">
        <MudCardContent>
            <MudGrid>
                <DataAnnotationsValidator/>
                <MudItem xs="12">
                    <MudText Align="Align.Center" Typo="Typo.h4">
                        Sign In
                    </MudText>
                </MudItem>
                <MudItem xs="12">
                    <MudText Align="Align.Center" Typo="Typo.h4">
                        Login with your Credentials.
                    </MudText>
                </MudItem>
                <MudItem xs="12">
                    <MudText Align="Align.Center">
                        Don't have an account? <MudLink Href="/account/register">Register here</MudLink>
                    </MudText>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="E-mail"
                                  Variant="Variant.Outlined"
                                  @bind-Value="LoginCommand.Email"
                                  For="() => LoginCommand.Email" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="Password"
                                  Variant="Variant.Outlined"
                                  @bind-Value="LoginCommand.Password"
                                  For="() => LoginCommand.Password"
                                  InputType="InputType"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@InputIcon"
                                  OnAdornmentClick="Toggle" />
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-space-between align-center">
                    <MudCheckBox T="bool" Label="Remember me?" Color="Color.Primary" Class="ml-n1" />
                    <MudLink Href="/account/forgot-password">
                        Forgot password?
                    </MudLink>
                </MudItem>
                <MudItem xs="12">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large">
                        Sign In
                    </MudButton>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
</EditForm>
@code
{
    private LoginCommand LoginCommand { get; } = new();
    private bool IsPasswordVisible { get; set; }
    private InputType InputType { get; set; } = InputType.Password;
    private string InputIcon { get; set; } = Icons.Material.Filled.VisibilityOff;

    [Inject]
    public IMediator Mediator { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public ISnackbar Snackbar { get; set; }

    private void Toggle()
    {
        if (IsPasswordVisible)
        {
            IsPasswordVisible = false;
            InputType = InputType.Password;
            InputIcon = Icons.Material.Filled.VisibilityOff;
        }
        else
        {
            IsPasswordVisible = true;
            InputType = InputType.Text;
            InputIcon = Icons.Material.Filled.Visibility;
        }
    }

    private async Task OnValidSubmitAsync()
    {
        var result = await Mediator.Send(LoginCommand);
        if (result.Succeeded)
            NavigationManager.NavigateTo("/", true);
        else
            Snackbar.Add(result.Error, Severity.Error);
    }
}